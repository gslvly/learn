全局配置：
	名字	：git config --global user.name 'gs'
	email	：git config --global user.email '605661239@qq.com'
	查看配置：git config --list
建立仓库：目录下 git init
状态：
	已提交（committed）:已提交表示该文件已经被安全地保存在本地数据库中了
	已修改（modified） :已修改表示修改了某个文件，但还没有提交保存；
	已暂存（staged）   :已暂存表示把已修改的文件放在下次提交时要保存的清单中。
克隆：
	git clone 
功能：
    本地：
			git status 									   检测当前状态。
			git diff path (--staged)				检测未add变化（--staged，为add后的文件的变化）。
			git add 												跟踪文件（新建或者修改的文件需要，可以在status中显示出来，放在暂存区。）
			git reset HEAD filename					去除跟踪修改，与add对应
			git rm  												删除文件 与add对应。会删掉本地文件几暂存区文件。
			git rm --cached t1.txt					去除跟踪，不删除文件(若push，其他人会被删掉文件)。
			git mv oldName newName					文件重命名。
			git log -p(--stat) -2						查看log信息。-p为更新差异(--stat更新具体文件)，-2为最近2次的差异。
			git log --graph --all --oneline 查看分支合并情况
			git reflog 											查看commit信息,解决reset后log命令无法查看后面的commit，
			git commit (-a) -m '修改了xxx' 	 提交文件(-a 可以不用add便提交)
			git commit --amend 							撤销刚才的commit，重新commit。
    远程：
			git remote 										查看主机名字
			git remote -v 								查看主机网址
			git remote add 主机名 url			添加主机名
			git remote show 主机名				查看主机详细信息。
			git remote rename 原主机名 			新主机名
			git remote set-url 主机名 url			更换仓库
    更新：
			git fetch 主机名 分支名				取回远程主机 在分支上的更新。不写分支名为所有更新。不合并
			git pull  						   			拉取分支合并
			git pull origin master --allow-unrelated-histories 合并没有相同histories的代码
		分支：
			git branch 	(-v | --no-merged)		查看所有分支(查看最后一次提交|没有合并的分支)。
			git branch ts											新建ts分支
			git checkout master								跳到主机
			git checkout 分支名			 					跳到分支		
			git checkout -b newtest						创新新分支newtest，并跳转到上面，是上面两条的合写。
			git merge ts											与ts分支合并
			git branch -D ts									删除ts分支。
			git push origin -d ts							删除远端分支							
			git push origin :refs/head/feature        	删除远程分支(：之前为本地分支，：之后为远程分支，本地分支为空，则删除远程分支)
		合并提交：
			git reset (--solf)
			git rebase -i
		临时储存
			git stash 			临时缓存
			git stash pop 			拿出缓存
			
		压缩commit
			git rebase -i start end  从上到下依次为最早提交到最晚提交。s commit message， f删除commit。
				第一个commit只能是p。保存后出现分支丢失，需要checkout -b 创建新分支。再次合并老分支必须使用 git merge xx --squash
			


		回滚：	
			git checkout . 								没有commit时，清除修改
			git commit --amend						已经commit，但是需要取消此commit，重新commit
			git reset --hard needversion	已经commit,回滚到需要版本，删除所有改动。
			--keep   											回滚到需要的版本，但是不删除本地的改动。
			git reset HEAD filename				add后取消add
		批量删除:
		git branch |grep ‘bra‘|xargs git branch -d
		与远程分支同步
		git remote prune origin

tag
	git tag 'version' 										创建tag
	git push origin --tags | version      push所有tag
	git tag -d 'version'        					删除本地tag
	git push origin :refs/tags/version 		删除仓库tag
	git push origin --delete version			上同
	git pull origin tagVersion 						获取远程tag

